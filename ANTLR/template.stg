group template;

sums(symbols,sums) ::= <<
import java.util.HashMap;
import choco.Choco;
import choco.Options;
import choco.cp.model.CPModel;
import choco.cp.solver.CPSolver;
import choco.kernel.model.Model;
import choco.kernel.model.variables.integer.IntegerExpressionVariable;
import choco.kernel.model.variables.integer.IntegerVariable;
import choco.kernel.solver.Solver;

public class PuzzleSolver {

  private static final IntegerVariable ZERO = Choco.constant(0);

  /**
   * Loesen des Zahlenraetsels
   */
  public static void main(String[] args) {
    Model model = new CPModel();
 

    <symbols:{symbol| IntegerVariable <symbol> = Choco.makeIntVar("<symbol>", 0, 9, Options.V_ENUM); <\n>} >


    HashMap\<Integer,IntegerVariable\> uebertraege = new HashMap\<Integer,IntegerVariable\>();
    int i = 0;
    
    <sums; separator="\n">

    model.addConstraint(Choco.allDifferent(<symbols; separator=", ">));

    Solver s = new CPSolver();
    s.read(model);
    s.solve();

    <symbols:{symbol| System.out.println("<symbol> = " + s.getVar(<symbol>).getVal()); }; separator="\n">
  }

}

>>


sum(number1, number2, number3) ::= <<
uebertraege.put(i,Choco.constant(0));
<number1.Characters, number2.Characters, number3.Characters :
  {n1, n2, n3 |
uebertraege.put(i+1,Choco.makeIntVar("u1", 0, 1, new String[]{Options.V_ENUM}));  
model.addConstraint(Choco.eq(Choco.plus(Choco.plus(<if(n1)><n1><else>ZERO<endif>, <if(n2)><n2><else>ZERO<endif>), uebertraege.get(i)), Choco.plus(<if(n3)><n3><else>ZERO<endif>, Choco.mult( uebertraege.get(i+1),10))));
i++;};separator="\n">



>>


